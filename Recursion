#include <iostream>
#include <bits/stdc++.h>


using namespace std;


void f(int n){
     
     if(n==0)return;
     
       cout<<n<<endl;
       
       f(n-1);
     

     }         
 

int main(){

 
 int n;
 cin>>n;
  f(n);
 
	return 0;
}

    
------------------------------------------------------------------------------------------------------------------
Parameterised recursion 
#include <iostream>
#include <bits/stdc++.h>


using namespace std;


void f(int i,int sum){
     
     if(i<1){
         
         cout<<sum<<endl;
         return;
     }
      
       
       f(i-1,sum+i);
     

     }         
 

int main(){

 
 int n;
 cin>>n;
  int sum=0;
  f(n,0);
 
	return 0;
}

    -----------------------------------------------------------------------
    functional 
    
    #include <iostream>
#include <bits/stdc++.h>


using namespace std;


int f(int n){
     
     if(n==0){
         return 0;
     }
      
       
      return n+f(n-1);

     }         
 

int main(){

 
 int n;
 cin>>n;
  int sum=0;
  cout<<f(n);
 
	return 0;
}

    ----------------------------------------------------------------------------------
    #include <iostream>
#include <bits/stdc++.h>


using namespace std;


int f(int n){
     
     if(n==1){
         return 1;
     }
      
       
      return n*f(n-1);

     }         
 

int main(){

 
 int n;
 cin>>n;
  int sum=0;
  cout<<f(n);
 
	return 0;
}

    
